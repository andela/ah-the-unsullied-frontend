// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`article list view should render article list 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArticleList
    article={
      Object {
        "author": Object {
          "bio": "i have abio",
          "image": "hshhshs",
          "username": "nesh",
        },
        "body": "gsgsgsg",
        "created_at": "01-01-2019",
        "description": "some stuff",
        "dislikes": 1,
        "displiked": false,
        "is_reported": false,
        "liked": false,
        "likes": 2,
        "slug": "my-article",
        "title": "my article",
      }
    }
    articleCard={[MockFunction]}
    articles={
      Object {
        "articles": Object {
          "count": 12,
          "pages": Object {
            "next_page": Object {},
            "previous_page": Object {},
          },
          "resuts": Array [
            Object {
              "author": Object {
                "bio": "i have abio",
                "image": "hshhshs",
                "username": "nesh",
              },
              "body": "gsgsgsg",
              "created_at": "01-01-2019",
              "description": "some stuff",
              "dislikes": 1,
              "displiked": false,
              "is_reported": false,
              "liked": false,
              "likes": 2,
              "slug": "my-article",
              "title": "my article",
            },
            Object {
              "author": Object {
                "bio": "i have abio",
                "image": "hshhshs",
                "username": "nesh",
              },
              "body": "gsgsgsg",
              "created_at": "01-01-2019",
              "description": "some stuff",
              "dislikes": 1,
              "displiked": false,
              "is_reported": false,
              "liked": false,
              "likes": 2,
              "slug": "my-article",
              "title": "my article",
            },
          ],
        },
      }
    }
    auth={
      Object {
        "isAuthenticated": true,
        "user": Object {
          "username": "nesh",
        },
      }
    }
    getArticles={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    match={
      Object {
        "params": Object {
          "slug": "my article",
        },
      }
    }
    pageNumber={2}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Row>
        <Col
          s={5}
        >
          <Preloader
            active={true}
            color="blue"
            flashing={false}
            size="big"
          />
        </Col>
      </Row>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Col
          s={5}
        >
          <Preloader
            active={true}
            color="blue"
            flashing={false}
            size="big"
          />
        </Col>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Preloader
            active={true}
            color="blue"
            flashing={false}
            size="big"
          />,
          "s": 5,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": true,
            "color": "blue",
            "flashing": false,
            "size": "big",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Row>
          <Col
            s={5}
          >
            <Preloader
              active={true}
              color="blue"
              flashing={false}
              size="big"
            />
          </Col>
        </Row>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Col
            s={5}
          >
            <Preloader
              active={true}
              color="blue"
              flashing={false}
              size="big"
            />
          </Col>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Preloader
              active={true}
              color="blue"
              flashing={false}
              size="big"
            />,
            "s": 5,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": true,
              "color": "blue",
              "flashing": false,
              "size": "big",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
