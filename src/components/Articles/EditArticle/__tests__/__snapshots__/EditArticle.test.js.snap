// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditArticle should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditArticle
    articlereducer={
      Object {
        "article": Object {
          "article": Object {
            "author": Object {
              "bio": null,
              "following": null,
              "image": "https://res.cloudinary.com/dadrqjrpw/image/upload/v1550732215/tzpffmzpmsy3lmijpauf.jpg",
              "username": "kwanj",
            },
            "body": "<p>sbsdbb</p>",
            "created_at": "2019-02-28T10:04:42.687397Z",
            "description": "First article from the frontens #theunsullied",
            "disliked": false,
            "dislikes": 0,
            "id": 6,
            "is_reported": false,
            "liked": false,
            "likes": 0,
            "rating": 0,
            "read_time": "1 min read",
            "slug": "how-to-become-a-god-xd0ctx6n",
            "tag_list": Array [
              "kwanj",
            ],
            "title": "how-to-become-a-god",
            "updated_at": "2019-02-28T10:15:29.020191Z",
          },
        },
      }
    }
    auth={
      Object {
        "isAuthenticated": true,
        "user": Object {
          "email": "kwanj@gmail.com",
          "username": "kwanj",
        },
      }
    }
    editArticle={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <withRouter(Connect(Nav)) />,
        <div
          className="container"
        >
          <form
            onSubmit={[Function]}
          >
            <div
              className="form-group"
            >
              <input
                className="form-control"
                name="title"
                onChange={[Function]}
                required={true}
                type="text"
                value="how-to-become-a-god"
              />
              <input
                className="form-control"
                name="description"
                onChange={[Function]}
                required={true}
                type="text"
                value="First article from the frontens #theunsullied"
              />
            </div>
            <div
              className="form-group"
            >
              <Quill
                formats={
                  Array [
                    "header",
                    "font",
                    "size",
                    "bold",
                    "italic",
                    "underline",
                    "strike",
                    "blockquote",
                    "list",
                    "bullet",
                    "link",
                    "image",
                    "video",
                    "code-block",
                  ]
                }
                modules={
                  Object {
                    "toolbar": Array [
                      Array [
                        Object {
                          "header": "1",
                        },
                        Object {
                          "header": "2",
                        },
                        Object {
                          "font": Array [],
                        },
                      ],
                      Array [
                        Object {
                          "size": Array [],
                        },
                      ],
                      Array [
                        "bold",
                        "italic",
                        "underline",
                        "strike",
                        "blockquote",
                      ],
                      Array [
                        Object {
                          "list": "ordered",
                        },
                        Object {
                          "list": "bullet",
                        },
                      ],
                      Array [
                        "link",
                        "image",
                        "video",
                      ],
                      Array [
                        "clean",
                      ],
                      Array [
                        "code-block",
                      ],
                    ],
                  }
                }
                onChange={[Function]}
                theme="snow"
                value="<p>sbsdbb</p>"
              />
            </div>
            <div
              className="tags"
            >
              <TagsInput
                addKeys={
                  Array [
                    9,
                    13,
                  ]
                }
                addOnBlur={false}
                addOnPaste={false}
                className="react-tagsinput"
                disabled={false}
                focusedClassName="react-tagsinput--focused"
                inputProps={Object {}}
                inputValue=""
                maxTags={-1}
                onChange={[Function]}
                onChangeInput={[Function]}
                onlyUnique={false}
                pasteSplit={[Function]}
                preventSubmit={true}
                removeKeys={
                  Array [
                    8,
                  ]
                }
                renderInput={[Function]}
                renderLayout={[Function]}
                renderTag={[Function]}
                tagDisplayProp={null}
                tagProps={
                  Object {
                    "className": "react-tagsinput-tag",
                    "classNameRemove": "react-tagsinput-remove",
                  }
                }
                validationRegex={/\\.\\*/}
                value={
                  Array [
                    "kwanj",
                  ]
                }
              />
            </div>
            <button
              className="btn btn-primary"
              id="post"
            >
              Update
            </button>
          </form>
          <br />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <form
              onSubmit={[Function]}
            >
              <div
                className="form-group"
              >
                <input
                  className="form-control"
                  name="title"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value="how-to-become-a-god"
                />
                <input
                  className="form-control"
                  name="description"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value="First article from the frontens #theunsullied"
                />
              </div>
              <div
                className="form-group"
              >
                <Quill
                  formats={
                    Array [
                      "header",
                      "font",
                      "size",
                      "bold",
                      "italic",
                      "underline",
                      "strike",
                      "blockquote",
                      "list",
                      "bullet",
                      "link",
                      "image",
                      "video",
                      "code-block",
                    ]
                  }
                  modules={
                    Object {
                      "toolbar": Array [
                        Array [
                          Object {
                            "header": "1",
                          },
                          Object {
                            "header": "2",
                          },
                          Object {
                            "font": Array [],
                          },
                        ],
                        Array [
                          Object {
                            "size": Array [],
                          },
                        ],
                        Array [
                          "bold",
                          "italic",
                          "underline",
                          "strike",
                          "blockquote",
                        ],
                        Array [
                          Object {
                            "list": "ordered",
                          },
                          Object {
                            "list": "bullet",
                          },
                        ],
                        Array [
                          "link",
                          "image",
                          "video",
                        ],
                        Array [
                          "clean",
                        ],
                        Array [
                          "code-block",
                        ],
                      ],
                    }
                  }
                  onChange={[Function]}
                  theme="snow"
                  value="<p>sbsdbb</p>"
                />
              </div>
              <div
                className="tags"
              >
                <TagsInput
                  addKeys={
                    Array [
                      9,
                      13,
                    ]
                  }
                  addOnBlur={false}
                  addOnPaste={false}
                  className="react-tagsinput"
                  disabled={false}
                  focusedClassName="react-tagsinput--focused"
                  inputProps={Object {}}
                  inputValue=""
                  maxTags={-1}
                  onChange={[Function]}
                  onChangeInput={[Function]}
                  onlyUnique={false}
                  pasteSplit={[Function]}
                  preventSubmit={true}
                  removeKeys={
                    Array [
                      8,
                    ]
                  }
                  renderInput={[Function]}
                  renderLayout={[Function]}
                  renderTag={[Function]}
                  tagDisplayProp={null}
                  tagProps={
                    Object {
                      "className": "react-tagsinput-tag",
                      "classNameRemove": "react-tagsinput-remove",
                    }
                  }
                  validationRegex={/\\.\\*/}
                  value={
                    Array [
                      "kwanj",
                    ]
                  }
                />
              </div>
              <button
                className="btn btn-primary"
                id="post"
              >
                Update
              </button>
            </form>,
            <br />,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="form-group"
                >
                  <input
                    className="form-control"
                    name="title"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="how-to-become-a-god"
                  />
                  <input
                    className="form-control"
                    name="description"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="First article from the frontens #theunsullied"
                  />
                </div>,
                <div
                  className="form-group"
                >
                  <Quill
                    formats={
                      Array [
                        "header",
                        "font",
                        "size",
                        "bold",
                        "italic",
                        "underline",
                        "strike",
                        "blockquote",
                        "list",
                        "bullet",
                        "link",
                        "image",
                        "video",
                        "code-block",
                      ]
                    }
                    modules={
                      Object {
                        "toolbar": Array [
                          Array [
                            Object {
                              "header": "1",
                            },
                            Object {
                              "header": "2",
                            },
                            Object {
                              "font": Array [],
                            },
                          ],
                          Array [
                            Object {
                              "size": Array [],
                            },
                          ],
                          Array [
                            "bold",
                            "italic",
                            "underline",
                            "strike",
                            "blockquote",
                          ],
                          Array [
                            Object {
                              "list": "ordered",
                            },
                            Object {
                              "list": "bullet",
                            },
                          ],
                          Array [
                            "link",
                            "image",
                            "video",
                          ],
                          Array [
                            "clean",
                          ],
                          Array [
                            "code-block",
                          ],
                        ],
                      }
                    }
                    onChange={[Function]}
                    theme="snow"
                    value="<p>sbsdbb</p>"
                  />
                </div>,
                <div
                  className="tags"
                >
                  <TagsInput
                    addKeys={
                      Array [
                        9,
                        13,
                      ]
                    }
                    addOnBlur={false}
                    addOnPaste={false}
                    className="react-tagsinput"
                    disabled={false}
                    focusedClassName="react-tagsinput--focused"
                    inputProps={Object {}}
                    inputValue=""
                    maxTags={-1}
                    onChange={[Function]}
                    onChangeInput={[Function]}
                    onlyUnique={false}
                    pasteSplit={[Function]}
                    preventSubmit={true}
                    removeKeys={
                      Array [
                        8,
                      ]
                    }
                    renderInput={[Function]}
                    renderLayout={[Function]}
                    renderTag={[Function]}
                    tagDisplayProp={null}
                    tagProps={
                      Object {
                        "className": "react-tagsinput-tag",
                        "classNameRemove": "react-tagsinput-remove",
                      }
                    }
                    validationRegex={/\\.\\*/}
                    value={
                      Array [
                        "kwanj",
                      ]
                    }
                  />
                </div>,
                <button
                  className="btn btn-primary"
                  id="post"
                >
                  Update
                </button>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="form-control"
                      name="title"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="how-to-become-a-god"
                    />,
                    <input
                      className="form-control"
                      name="description"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="First article from the frontens #theunsullied"
                    />,
                  ],
                  "className": "form-group",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "name": "title",
                      "onChange": [Function],
                      "required": true,
                      "type": "text",
                      "value": "how-to-become-a-god",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "name": "description",
                      "onChange": [Function],
                      "required": true,
                      "type": "text",
                      "value": "First article from the frontens #theunsullied",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Quill
                    formats={
                      Array [
                        "header",
                        "font",
                        "size",
                        "bold",
                        "italic",
                        "underline",
                        "strike",
                        "blockquote",
                        "list",
                        "bullet",
                        "link",
                        "image",
                        "video",
                        "code-block",
                      ]
                    }
                    modules={
                      Object {
                        "toolbar": Array [
                          Array [
                            Object {
                              "header": "1",
                            },
                            Object {
                              "header": "2",
                            },
                            Object {
                              "font": Array [],
                            },
                          ],
                          Array [
                            Object {
                              "size": Array [],
                            },
                          ],
                          Array [
                            "bold",
                            "italic",
                            "underline",
                            "strike",
                            "blockquote",
                          ],
                          Array [
                            Object {
                              "list": "ordered",
                            },
                            Object {
                              "list": "bullet",
                            },
                          ],
                          Array [
                            "link",
                            "image",
                            "video",
                          ],
                          Array [
                            "clean",
                          ],
                          Array [
                            "code-block",
                          ],
                        ],
                      }
                    }
                    onChange={[Function]}
                    theme="snow"
                    value="<p>sbsdbb</p>"
                  />,
                  "className": "form-group",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "formats": Array [
                      "header",
                      "font",
                      "size",
                      "bold",
                      "italic",
                      "underline",
                      "strike",
                      "blockquote",
                      "list",
                      "bullet",
                      "link",
                      "image",
                      "video",
                      "code-block",
                    ],
                    "modules": Object {
                      "toolbar": Array [
                        Array [
                          Object {
                            "header": "1",
                          },
                          Object {
                            "header": "2",
                          },
                          Object {
                            "font": Array [],
                          },
                        ],
                        Array [
                          Object {
                            "size": Array [],
                          },
                        ],
                        Array [
                          "bold",
                          "italic",
                          "underline",
                          "strike",
                          "blockquote",
                        ],
                        Array [
                          Object {
                            "list": "ordered",
                          },
                          Object {
                            "list": "bullet",
                          },
                        ],
                        Array [
                          "link",
                          "image",
                          "video",
                        ],
                        Array [
                          "clean",
                        ],
                        Array [
                          "code-block",
                        ],
                      ],
                    },
                    "onChange": [Function],
                    "theme": "snow",
                    "value": "<p>sbsdbb</p>",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <TagsInput
                    addKeys={
                      Array [
                        9,
                        13,
                      ]
                    }
                    addOnBlur={false}
                    addOnPaste={false}
                    className="react-tagsinput"
                    disabled={false}
                    focusedClassName="react-tagsinput--focused"
                    inputProps={Object {}}
                    inputValue=""
                    maxTags={-1}
                    onChange={[Function]}
                    onChangeInput={[Function]}
                    onlyUnique={false}
                    pasteSplit={[Function]}
                    preventSubmit={true}
                    removeKeys={
                      Array [
                        8,
                      ]
                    }
                    renderInput={[Function]}
                    renderLayout={[Function]}
                    renderTag={[Function]}
                    tagDisplayProp={null}
                    tagProps={
                      Object {
                        "className": "react-tagsinput-tag",
                        "classNameRemove": "react-tagsinput-remove",
                      }
                    }
                    validationRegex={/\\.\\*/}
                    value={
                      Array [
                        "kwanj",
                      ]
                    }
                  />,
                  "className": "tags",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "addKeys": Array [
                      9,
                      13,
                    ],
                    "addOnBlur": false,
                    "addOnPaste": false,
                    "className": "react-tagsinput",
                    "disabled": false,
                    "focusedClassName": "react-tagsinput--focused",
                    "inputProps": Object {},
                    "inputValue": "",
                    "maxTags": -1,
                    "onChange": [Function],
                    "onChangeInput": [Function],
                    "onlyUnique": false,
                    "pasteSplit": [Function],
                    "preventSubmit": true,
                    "removeKeys": Array [
                      8,
                    ],
                    "renderInput": [Function],
                    "renderLayout": [Function],
                    "renderTag": [Function],
                    "tagDisplayProp": null,
                    "tagProps": Object {
                      "className": "react-tagsinput-tag",
                      "classNameRemove": "react-tagsinput-remove",
                    },
                    "validationRegex": /\\.\\*/,
                    "value": Array [
                      "kwanj",
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Update",
                  "className": "btn btn-primary",
                  "id": "post",
                },
                "ref": null,
                "rendered": "Update",
                "type": "button",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <withRouter(Connect(Nav)) />,
          <div
            className="container"
          >
            <form
              onSubmit={[Function]}
            >
              <div
                className="form-group"
              >
                <input
                  className="form-control"
                  name="title"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value="how-to-become-a-god"
                />
                <input
                  className="form-control"
                  name="description"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value="First article from the frontens #theunsullied"
                />
              </div>
              <div
                className="form-group"
              >
                <Quill
                  formats={
                    Array [
                      "header",
                      "font",
                      "size",
                      "bold",
                      "italic",
                      "underline",
                      "strike",
                      "blockquote",
                      "list",
                      "bullet",
                      "link",
                      "image",
                      "video",
                      "code-block",
                    ]
                  }
                  modules={
                    Object {
                      "toolbar": Array [
                        Array [
                          Object {
                            "header": "1",
                          },
                          Object {
                            "header": "2",
                          },
                          Object {
                            "font": Array [],
                          },
                        ],
                        Array [
                          Object {
                            "size": Array [],
                          },
                        ],
                        Array [
                          "bold",
                          "italic",
                          "underline",
                          "strike",
                          "blockquote",
                        ],
                        Array [
                          Object {
                            "list": "ordered",
                          },
                          Object {
                            "list": "bullet",
                          },
                        ],
                        Array [
                          "link",
                          "image",
                          "video",
                        ],
                        Array [
                          "clean",
                        ],
                        Array [
                          "code-block",
                        ],
                      ],
                    }
                  }
                  onChange={[Function]}
                  theme="snow"
                  value="<p>sbsdbb</p>"
                />
              </div>
              <div
                className="tags"
              >
                <TagsInput
                  addKeys={
                    Array [
                      9,
                      13,
                    ]
                  }
                  addOnBlur={false}
                  addOnPaste={false}
                  className="react-tagsinput"
                  disabled={false}
                  focusedClassName="react-tagsinput--focused"
                  inputProps={Object {}}
                  inputValue=""
                  maxTags={-1}
                  onChange={[Function]}
                  onChangeInput={[Function]}
                  onlyUnique={false}
                  pasteSplit={[Function]}
                  preventSubmit={true}
                  removeKeys={
                    Array [
                      8,
                    ]
                  }
                  renderInput={[Function]}
                  renderLayout={[Function]}
                  renderTag={[Function]}
                  tagDisplayProp={null}
                  tagProps={
                    Object {
                      "className": "react-tagsinput-tag",
                      "classNameRemove": "react-tagsinput-remove",
                    }
                  }
                  validationRegex={/\\.\\*/}
                  value={
                    Array [
                      "kwanj",
                    ]
                  }
                />
              </div>
              <button
                className="btn btn-primary"
                id="post"
              >
                Update
              </button>
            </form>
            <br />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <form
                onSubmit={[Function]}
              >
                <div
                  className="form-group"
                >
                  <input
                    className="form-control"
                    name="title"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="how-to-become-a-god"
                  />
                  <input
                    className="form-control"
                    name="description"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="First article from the frontens #theunsullied"
                  />
                </div>
                <div
                  className="form-group"
                >
                  <Quill
                    formats={
                      Array [
                        "header",
                        "font",
                        "size",
                        "bold",
                        "italic",
                        "underline",
                        "strike",
                        "blockquote",
                        "list",
                        "bullet",
                        "link",
                        "image",
                        "video",
                        "code-block",
                      ]
                    }
                    modules={
                      Object {
                        "toolbar": Array [
                          Array [
                            Object {
                              "header": "1",
                            },
                            Object {
                              "header": "2",
                            },
                            Object {
                              "font": Array [],
                            },
                          ],
                          Array [
                            Object {
                              "size": Array [],
                            },
                          ],
                          Array [
                            "bold",
                            "italic",
                            "underline",
                            "strike",
                            "blockquote",
                          ],
                          Array [
                            Object {
                              "list": "ordered",
                            },
                            Object {
                              "list": "bullet",
                            },
                          ],
                          Array [
                            "link",
                            "image",
                            "video",
                          ],
                          Array [
                            "clean",
                          ],
                          Array [
                            "code-block",
                          ],
                        ],
                      }
                    }
                    onChange={[Function]}
                    theme="snow"
                    value="<p>sbsdbb</p>"
                  />
                </div>
                <div
                  className="tags"
                >
                  <TagsInput
                    addKeys={
                      Array [
                        9,
                        13,
                      ]
                    }
                    addOnBlur={false}
                    addOnPaste={false}
                    className="react-tagsinput"
                    disabled={false}
                    focusedClassName="react-tagsinput--focused"
                    inputProps={Object {}}
                    inputValue=""
                    maxTags={-1}
                    onChange={[Function]}
                    onChangeInput={[Function]}
                    onlyUnique={false}
                    pasteSplit={[Function]}
                    preventSubmit={true}
                    removeKeys={
                      Array [
                        8,
                      ]
                    }
                    renderInput={[Function]}
                    renderLayout={[Function]}
                    renderTag={[Function]}
                    tagDisplayProp={null}
                    tagProps={
                      Object {
                        "className": "react-tagsinput-tag",
                        "classNameRemove": "react-tagsinput-remove",
                      }
                    }
                    validationRegex={/\\.\\*/}
                    value={
                      Array [
                        "kwanj",
                      ]
                    }
                  />
                </div>
                <button
                  className="btn btn-primary"
                  id="post"
                >
                  Update
                </button>
              </form>,
              <br />,
            ],
            "className": "container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="form-group"
                  >
                    <input
                      className="form-control"
                      name="title"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="how-to-become-a-god"
                    />
                    <input
                      className="form-control"
                      name="description"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="First article from the frontens #theunsullied"
                    />
                  </div>,
                  <div
                    className="form-group"
                  >
                    <Quill
                      formats={
                        Array [
                          "header",
                          "font",
                          "size",
                          "bold",
                          "italic",
                          "underline",
                          "strike",
                          "blockquote",
                          "list",
                          "bullet",
                          "link",
                          "image",
                          "video",
                          "code-block",
                        ]
                      }
                      modules={
                        Object {
                          "toolbar": Array [
                            Array [
                              Object {
                                "header": "1",
                              },
                              Object {
                                "header": "2",
                              },
                              Object {
                                "font": Array [],
                              },
                            ],
                            Array [
                              Object {
                                "size": Array [],
                              },
                            ],
                            Array [
                              "bold",
                              "italic",
                              "underline",
                              "strike",
                              "blockquote",
                            ],
                            Array [
                              Object {
                                "list": "ordered",
                              },
                              Object {
                                "list": "bullet",
                              },
                            ],
                            Array [
                              "link",
                              "image",
                              "video",
                            ],
                            Array [
                              "clean",
                            ],
                            Array [
                              "code-block",
                            ],
                          ],
                        }
                      }
                      onChange={[Function]}
                      theme="snow"
                      value="<p>sbsdbb</p>"
                    />
                  </div>,
                  <div
                    className="tags"
                  >
                    <TagsInput
                      addKeys={
                        Array [
                          9,
                          13,
                        ]
                      }
                      addOnBlur={false}
                      addOnPaste={false}
                      className="react-tagsinput"
                      disabled={false}
                      focusedClassName="react-tagsinput--focused"
                      inputProps={Object {}}
                      inputValue=""
                      maxTags={-1}
                      onChange={[Function]}
                      onChangeInput={[Function]}
                      onlyUnique={false}
                      pasteSplit={[Function]}
                      preventSubmit={true}
                      removeKeys={
                        Array [
                          8,
                        ]
                      }
                      renderInput={[Function]}
                      renderLayout={[Function]}
                      renderTag={[Function]}
                      tagDisplayProp={null}
                      tagProps={
                        Object {
                          "className": "react-tagsinput-tag",
                          "classNameRemove": "react-tagsinput-remove",
                        }
                      }
                      validationRegex={/\\.\\*/}
                      value={
                        Array [
                          "kwanj",
                        ]
                      }
                    />
                  </div>,
                  <button
                    className="btn btn-primary"
                    id="post"
                  >
                    Update
                  </button>,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        className="form-control"
                        name="title"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value="how-to-become-a-god"
                      />,
                      <input
                        className="form-control"
                        name="description"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value="First article from the frontens #theunsullied"
                      />,
                    ],
                    "className": "form-group",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "form-control",
                        "name": "title",
                        "onChange": [Function],
                        "required": true,
                        "type": "text",
                        "value": "how-to-become-a-god",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "form-control",
                        "name": "description",
                        "onChange": [Function],
                        "required": true,
                        "type": "text",
                        "value": "First article from the frontens #theunsullied",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Quill
                      formats={
                        Array [
                          "header",
                          "font",
                          "size",
                          "bold",
                          "italic",
                          "underline",
                          "strike",
                          "blockquote",
                          "list",
                          "bullet",
                          "link",
                          "image",
                          "video",
                          "code-block",
                        ]
                      }
                      modules={
                        Object {
                          "toolbar": Array [
                            Array [
                              Object {
                                "header": "1",
                              },
                              Object {
                                "header": "2",
                              },
                              Object {
                                "font": Array [],
                              },
                            ],
                            Array [
                              Object {
                                "size": Array [],
                              },
                            ],
                            Array [
                              "bold",
                              "italic",
                              "underline",
                              "strike",
                              "blockquote",
                            ],
                            Array [
                              Object {
                                "list": "ordered",
                              },
                              Object {
                                "list": "bullet",
                              },
                            ],
                            Array [
                              "link",
                              "image",
                              "video",
                            ],
                            Array [
                              "clean",
                            ],
                            Array [
                              "code-block",
                            ],
                          ],
                        }
                      }
                      onChange={[Function]}
                      theme="snow"
                      value="<p>sbsdbb</p>"
                    />,
                    "className": "form-group",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "formats": Array [
                        "header",
                        "font",
                        "size",
                        "bold",
                        "italic",
                        "underline",
                        "strike",
                        "blockquote",
                        "list",
                        "bullet",
                        "link",
                        "image",
                        "video",
                        "code-block",
                      ],
                      "modules": Object {
                        "toolbar": Array [
                          Array [
                            Object {
                              "header": "1",
                            },
                            Object {
                              "header": "2",
                            },
                            Object {
                              "font": Array [],
                            },
                          ],
                          Array [
                            Object {
                              "size": Array [],
                            },
                          ],
                          Array [
                            "bold",
                            "italic",
                            "underline",
                            "strike",
                            "blockquote",
                          ],
                          Array [
                            Object {
                              "list": "ordered",
                            },
                            Object {
                              "list": "bullet",
                            },
                          ],
                          Array [
                            "link",
                            "image",
                            "video",
                          ],
                          Array [
                            "clean",
                          ],
                          Array [
                            "code-block",
                          ],
                        ],
                      },
                      "onChange": [Function],
                      "theme": "snow",
                      "value": "<p>sbsdbb</p>",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <TagsInput
                      addKeys={
                        Array [
                          9,
                          13,
                        ]
                      }
                      addOnBlur={false}
                      addOnPaste={false}
                      className="react-tagsinput"
                      disabled={false}
                      focusedClassName="react-tagsinput--focused"
                      inputProps={Object {}}
                      inputValue=""
                      maxTags={-1}
                      onChange={[Function]}
                      onChangeInput={[Function]}
                      onlyUnique={false}
                      pasteSplit={[Function]}
                      preventSubmit={true}
                      removeKeys={
                        Array [
                          8,
                        ]
                      }
                      renderInput={[Function]}
                      renderLayout={[Function]}
                      renderTag={[Function]}
                      tagDisplayProp={null}
                      tagProps={
                        Object {
                          "className": "react-tagsinput-tag",
                          "classNameRemove": "react-tagsinput-remove",
                        }
                      }
                      validationRegex={/\\.\\*/}
                      value={
                        Array [
                          "kwanj",
                        ]
                      }
                    />,
                    "className": "tags",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "addKeys": Array [
                        9,
                        13,
                      ],
                      "addOnBlur": false,
                      "addOnPaste": false,
                      "className": "react-tagsinput",
                      "disabled": false,
                      "focusedClassName": "react-tagsinput--focused",
                      "inputProps": Object {},
                      "inputValue": "",
                      "maxTags": -1,
                      "onChange": [Function],
                      "onChangeInput": [Function],
                      "onlyUnique": false,
                      "pasteSplit": [Function],
                      "preventSubmit": true,
                      "removeKeys": Array [
                        8,
                      ],
                      "renderInput": [Function],
                      "renderLayout": [Function],
                      "renderTag": [Function],
                      "tagDisplayProp": null,
                      "tagProps": Object {
                        "className": "react-tagsinput-tag",
                        "classNameRemove": "react-tagsinput-remove",
                      },
                      "validationRegex": /\\.\\*/,
                      "value": Array [
                        "kwanj",
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Update",
                    "className": "btn btn-primary",
                    "id": "post",
                  },
                  "ref": null,
                  "rendered": "Update",
                  "type": "button",
                },
              ],
              "type": "form",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
