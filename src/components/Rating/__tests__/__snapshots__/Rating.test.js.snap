// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rating component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArticleRating
    article={
      Object {
        "article": Object {
          "article": Object {
            "author": Object {
              "username": "nesh",
            },
          },
        },
      }
    }
    auth={
      Object {
        "isAuthenticated": true,
        "user": Object {
          "username": "allan",
        },
      }
    }
    getAverageRating={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "slug": "article-slug",
            },
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    postRating={[MockFunction]}
    rating={
      Object {
        "rating": 5,
      }
    }
    slug={
      Object {
        "slug": "article-slug",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <t
        color="orange"
        onClick={[Function]}
        value={
          Object {
            "rating": 5,
          }
        }
        weight="25"
      />,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "color": "orange",
        "onClick": [Function],
        "value": Object {
          "rating": 5,
        },
        "weight": "25",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <t
          color="orange"
          onClick={[Function]}
          value={
            Object {
              "rating": 5,
            }
          }
          weight="25"
        />,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "color": "orange",
          "onClick": [Function],
          "value": Object {
            "rating": 5,
          },
          "weight": "25",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
