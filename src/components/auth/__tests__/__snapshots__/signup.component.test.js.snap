// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp
    error={Object {}}
    errors={Object {}}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    registerUser={[MockFunction]}
    signup={Object {}}
    success={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h4
          id="h4"
        >
          Welcome to Author's Haven
        </h4>,
        <form
          className="center-align col s12"
          onSubmit={[Function]}
        >
          <div>
            <i
              className="large material-icons prefix"
              id="signup-bot"
            >
              person_outline
            </i>
            <h5
              className="sign-up-text"
            >
              Sign Up
            </h5>
          </div>
          <p
            style={
              Object {
                "color": "red",
              }
            }
          />
          <div
            className="row center-align"
          >
            <div
              className="input-field col s10"
            >
              <i
                className="tiny material-icons prefix"
              >
                email_outline
              </i>
              <label
                htmlFor="email"
              >
                Email
              </label>
              <input
                id="icon_prefix"
                name="email"
                onChange={[Function]}
                type="email"
              />
            </div>
          </div>
          <p
            style={
              Object {
                "color": "red",
              }
            }
          />
          <div
            className="row center-align"
          >
            <div
              className="input-field col s10"
            >
              <i
                className="tiny material-icons prefix"
              >
                account_circle
              </i>
              <label
                htmlFor="username"
              >
                Username
              </label>
              <input
                id="icon_prefix"
                name="username"
                onChange={[Function]}
                type="text"
              />
            </div>
          </div>
          <p
            style={
              Object {
                "color": "red",
              }
            }
          />
          <div
            className="row center-align"
          >
            <div
              className="input-field col s10 "
            >
              <i
                className="tiny material-icons prefix"
              >
                lock_outline
              </i>
              <label
                htmlFor="password"
              >
                Password
              </label>
              <input
                id="icon_prefix"
                name="password"
                onChange={[Function]}
                type="password"
              />
            </div>
          </div>
          <div>
            <button
              className="btn"
              id="btn-register"
              type="submit"
            >
              Register
            </button>
          </div>
          <p
            id="already-member"
          >
            Already have an account? 
            <a
              href="/login"
            >
               Sign In
            </a>
          </p>
          <div
            className="loader"
          >
            <Unknown
              component="div"
              loaded={true}
              loadedClassName="loadedContent"
              parentClassName="loader"
            />
          </div>
        </form>,
      ],
      "className": "signup-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Welcome to Author's Haven",
          "id": "h4",
        },
        "ref": null,
        "rendered": "Welcome to Author's Haven",
        "type": "h4",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <i
                className="large material-icons prefix"
                id="signup-bot"
              >
                person_outline
              </i>
              <h5
                className="sign-up-text"
              >
                Sign Up
              </h5>
            </div>,
            <p
              style={
                Object {
                  "color": "red",
                }
              }
            />,
            <div
              className="row center-align"
            >
              <div
                className="input-field col s10"
              >
                <i
                  className="tiny material-icons prefix"
                >
                  email_outline
                </i>
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <input
                  id="icon_prefix"
                  name="email"
                  onChange={[Function]}
                  type="email"
                />
              </div>
            </div>,
            <p
              style={
                Object {
                  "color": "red",
                }
              }
            />,
            <div
              className="row center-align"
            >
              <div
                className="input-field col s10"
              >
                <i
                  className="tiny material-icons prefix"
                >
                  account_circle
                </i>
                <label
                  htmlFor="username"
                >
                  Username
                </label>
                <input
                  id="icon_prefix"
                  name="username"
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>,
            <p
              style={
                Object {
                  "color": "red",
                }
              }
            />,
            <div
              className="row center-align"
            >
              <div
                className="input-field col s10 "
              >
                <i
                  className="tiny material-icons prefix"
                >
                  lock_outline
                </i>
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  id="icon_prefix"
                  name="password"
                  onChange={[Function]}
                  type="password"
                />
              </div>
            </div>,
            <div>
              <button
                className="btn"
                id="btn-register"
                type="submit"
              >
                Register
              </button>
            </div>,
            <p
              id="already-member"
            >
              Already have an account? 
              <a
                href="/login"
              >
                 Sign In
              </a>
            </p>,
            <div
              className="loader"
            >
              <Unknown
                component="div"
                loaded={true}
                loadedClassName="loadedContent"
                parentClassName="loader"
              />
            </div>,
          ],
          "className": "center-align col s12",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  className="large material-icons prefix"
                  id="signup-bot"
                >
                  person_outline
                </i>,
                <h5
                  className="sign-up-text"
                >
                  Sign Up
                </h5>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "person_outline",
                  "className": "large material-icons prefix",
                  "id": "signup-bot",
                },
                "ref": null,
                "rendered": "person_outline",
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Sign Up",
                  "className": "sign-up-text",
                },
                "ref": null,
                "rendered": "Sign Up",
                "type": "h5",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "style": Object {
                "color": "red",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-field col s10"
              >
                <i
                  className="tiny material-icons prefix"
                >
                  email_outline
                </i>
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <input
                  id="icon_prefix"
                  name="email"
                  onChange={[Function]}
                  type="email"
                />
              </div>,
              "className": "row center-align",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <i
                    className="tiny material-icons prefix"
                  >
                    email_outline
                  </i>,
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>,
                  <input
                    id="icon_prefix"
                    name="email"
                    onChange={[Function]}
                    type="email"
                  />,
                ],
                "className": "input-field col s10",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "email_outline",
                    "className": "tiny material-icons prefix",
                  },
                  "ref": null,
                  "rendered": "email_outline",
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email",
                    "htmlFor": "email",
                  },
                  "ref": null,
                  "rendered": "Email",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "icon_prefix",
                    "name": "email",
                    "onChange": [Function],
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "style": Object {
                "color": "red",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-field col s10"
              >
                <i
                  className="tiny material-icons prefix"
                >
                  account_circle
                </i>
                <label
                  htmlFor="username"
                >
                  Username
                </label>
                <input
                  id="icon_prefix"
                  name="username"
                  onChange={[Function]}
                  type="text"
                />
              </div>,
              "className": "row center-align",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <i
                    className="tiny material-icons prefix"
                  >
                    account_circle
                  </i>,
                  <label
                    htmlFor="username"
                  >
                    Username
                  </label>,
                  <input
                    id="icon_prefix"
                    name="username"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
                "className": "input-field col s10",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "account_circle",
                    "className": "tiny material-icons prefix",
                  },
                  "ref": null,
                  "rendered": "account_circle",
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Username",
                    "htmlFor": "username",
                  },
                  "ref": null,
                  "rendered": "Username",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "icon_prefix",
                    "name": "username",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "style": Object {
                "color": "red",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-field col s10 "
              >
                <i
                  className="tiny material-icons prefix"
                >
                  lock_outline
                </i>
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  id="icon_prefix"
                  name="password"
                  onChange={[Function]}
                  type="password"
                />
              </div>,
              "className": "row center-align",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <i
                    className="tiny material-icons prefix"
                  >
                    lock_outline
                  </i>,
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>,
                  <input
                    id="icon_prefix"
                    name="password"
                    onChange={[Function]}
                    type="password"
                  />,
                ],
                "className": "input-field col s10 ",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "lock_outline",
                    "className": "tiny material-icons prefix",
                  },
                  "ref": null,
                  "rendered": "lock_outline",
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password",
                    "htmlFor": "password",
                  },
                  "ref": null,
                  "rendered": "Password",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "icon_prefix",
                    "name": "password",
                    "onChange": [Function],
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="btn"
                id="btn-register"
                type="submit"
              >
                Register
              </button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Register",
                "className": "btn",
                "id": "btn-register",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Register",
              "type": "button",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Already have an account? ",
                <a
                  href="/login"
                >
                   Sign In
                </a>,
              ],
              "id": "already-member",
            },
            "ref": null,
            "rendered": Array [
              "Already have an account? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Sign In",
                  "href": "/login",
                },
                "ref": null,
                "rendered": " Sign In",
                "type": "a",
              },
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Unknown
                component="div"
                loaded={true}
                loadedClassName="loadedContent"
                parentClassName="loader"
              />,
              "className": "loader",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": "div",
                "loaded": true,
                "loadedClassName": "loadedContent",
                "parentClassName": "loader",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h4
            id="h4"
          >
            Welcome to Author's Haven
          </h4>,
          <form
            className="center-align col s12"
            onSubmit={[Function]}
          >
            <div>
              <i
                className="large material-icons prefix"
                id="signup-bot"
              >
                person_outline
              </i>
              <h5
                className="sign-up-text"
              >
                Sign Up
              </h5>
            </div>
            <p
              style={
                Object {
                  "color": "red",
                }
              }
            />
            <div
              className="row center-align"
            >
              <div
                className="input-field col s10"
              >
                <i
                  className="tiny material-icons prefix"
                >
                  email_outline
                </i>
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <input
                  id="icon_prefix"
                  name="email"
                  onChange={[Function]}
                  type="email"
                />
              </div>
            </div>
            <p
              style={
                Object {
                  "color": "red",
                }
              }
            />
            <div
              className="row center-align"
            >
              <div
                className="input-field col s10"
              >
                <i
                  className="tiny material-icons prefix"
                >
                  account_circle
                </i>
                <label
                  htmlFor="username"
                >
                  Username
                </label>
                <input
                  id="icon_prefix"
                  name="username"
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
            <p
              style={
                Object {
                  "color": "red",
                }
              }
            />
            <div
              className="row center-align"
            >
              <div
                className="input-field col s10 "
              >
                <i
                  className="tiny material-icons prefix"
                >
                  lock_outline
                </i>
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <input
                  id="icon_prefix"
                  name="password"
                  onChange={[Function]}
                  type="password"
                />
              </div>
            </div>
            <div>
              <button
                className="btn"
                id="btn-register"
                type="submit"
              >
                Register
              </button>
            </div>
            <p
              id="already-member"
            >
              Already have an account? 
              <a
                href="/login"
              >
                 Sign In
              </a>
            </p>
            <div
              className="loader"
            >
              <Unknown
                component="div"
                loaded={true}
                loadedClassName="loadedContent"
                parentClassName="loader"
              />
            </div>
          </form>,
        ],
        "className": "signup-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Welcome to Author's Haven",
            "id": "h4",
          },
          "ref": null,
          "rendered": "Welcome to Author's Haven",
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <i
                  className="large material-icons prefix"
                  id="signup-bot"
                >
                  person_outline
                </i>
                <h5
                  className="sign-up-text"
                >
                  Sign Up
                </h5>
              </div>,
              <p
                style={
                  Object {
                    "color": "red",
                  }
                }
              />,
              <div
                className="row center-align"
              >
                <div
                  className="input-field col s10"
                >
                  <i
                    className="tiny material-icons prefix"
                  >
                    email_outline
                  </i>
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                  <input
                    id="icon_prefix"
                    name="email"
                    onChange={[Function]}
                    type="email"
                  />
                </div>
              </div>,
              <p
                style={
                  Object {
                    "color": "red",
                  }
                }
              />,
              <div
                className="row center-align"
              >
                <div
                  className="input-field col s10"
                >
                  <i
                    className="tiny material-icons prefix"
                  >
                    account_circle
                  </i>
                  <label
                    htmlFor="username"
                  >
                    Username
                  </label>
                  <input
                    id="icon_prefix"
                    name="username"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </div>,
              <p
                style={
                  Object {
                    "color": "red",
                  }
                }
              />,
              <div
                className="row center-align"
              >
                <div
                  className="input-field col s10 "
                >
                  <i
                    className="tiny material-icons prefix"
                  >
                    lock_outline
                  </i>
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <input
                    id="icon_prefix"
                    name="password"
                    onChange={[Function]}
                    type="password"
                  />
                </div>
              </div>,
              <div>
                <button
                  className="btn"
                  id="btn-register"
                  type="submit"
                >
                  Register
                </button>
              </div>,
              <p
                id="already-member"
              >
                Already have an account? 
                <a
                  href="/login"
                >
                   Sign In
                </a>
              </p>,
              <div
                className="loader"
              >
                <Unknown
                  component="div"
                  loaded={true}
                  loadedClassName="loadedContent"
                  parentClassName="loader"
                />
              </div>,
            ],
            "className": "center-align col s12",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <i
                    className="large material-icons prefix"
                    id="signup-bot"
                  >
                    person_outline
                  </i>,
                  <h5
                    className="sign-up-text"
                  >
                    Sign Up
                  </h5>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "person_outline",
                    "className": "large material-icons prefix",
                    "id": "signup-bot",
                  },
                  "ref": null,
                  "rendered": "person_outline",
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sign Up",
                    "className": "sign-up-text",
                  },
                  "ref": null,
                  "rendered": "Sign Up",
                  "type": "h5",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "style": Object {
                  "color": "red",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="input-field col s10"
                >
                  <i
                    className="tiny material-icons prefix"
                  >
                    email_outline
                  </i>
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                  <input
                    id="icon_prefix"
                    name="email"
                    onChange={[Function]}
                    type="email"
                  />
                </div>,
                "className": "row center-align",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <i
                      className="tiny material-icons prefix"
                    >
                      email_outline
                    </i>,
                    <label
                      htmlFor="email"
                    >
                      Email
                    </label>,
                    <input
                      id="icon_prefix"
                      name="email"
                      onChange={[Function]}
                      type="email"
                    />,
                  ],
                  "className": "input-field col s10",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "email_outline",
                      "className": "tiny material-icons prefix",
                    },
                    "ref": null,
                    "rendered": "email_outline",
                    "type": "i",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Email",
                      "htmlFor": "email",
                    },
                    "ref": null,
                    "rendered": "Email",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "icon_prefix",
                      "name": "email",
                      "onChange": [Function],
                      "type": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "style": Object {
                  "color": "red",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="input-field col s10"
                >
                  <i
                    className="tiny material-icons prefix"
                  >
                    account_circle
                  </i>
                  <label
                    htmlFor="username"
                  >
                    Username
                  </label>
                  <input
                    id="icon_prefix"
                    name="username"
                    onChange={[Function]}
                    type="text"
                  />
                </div>,
                "className": "row center-align",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <i
                      className="tiny material-icons prefix"
                    >
                      account_circle
                    </i>,
                    <label
                      htmlFor="username"
                    >
                      Username
                    </label>,
                    <input
                      id="icon_prefix"
                      name="username"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                  "className": "input-field col s10",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "account_circle",
                      "className": "tiny material-icons prefix",
                    },
                    "ref": null,
                    "rendered": "account_circle",
                    "type": "i",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Username",
                      "htmlFor": "username",
                    },
                    "ref": null,
                    "rendered": "Username",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "icon_prefix",
                      "name": "username",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "style": Object {
                  "color": "red",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="input-field col s10 "
                >
                  <i
                    className="tiny material-icons prefix"
                  >
                    lock_outline
                  </i>
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <input
                    id="icon_prefix"
                    name="password"
                    onChange={[Function]}
                    type="password"
                  />
                </div>,
                "className": "row center-align",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <i
                      className="tiny material-icons prefix"
                    >
                      lock_outline
                    </i>,
                    <label
                      htmlFor="password"
                    >
                      Password
                    </label>,
                    <input
                      id="icon_prefix"
                      name="password"
                      onChange={[Function]}
                      type="password"
                    />,
                  ],
                  "className": "input-field col s10 ",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "lock_outline",
                      "className": "tiny material-icons prefix",
                    },
                    "ref": null,
                    "rendered": "lock_outline",
                    "type": "i",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "htmlFor": "password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "icon_prefix",
                      "name": "password",
                      "onChange": [Function],
                      "type": "password",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="btn"
                  id="btn-register"
                  type="submit"
                >
                  Register
                </button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Register",
                  "className": "btn",
                  "id": "btn-register",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Register",
                "type": "button",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Already have an account? ",
                  <a
                    href="/login"
                  >
                     Sign In
                  </a>,
                ],
                "id": "already-member",
              },
              "ref": null,
              "rendered": Array [
                "Already have an account? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Sign In",
                    "href": "/login",
                  },
                  "ref": null,
                  "rendered": " Sign In",
                  "type": "a",
                },
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Unknown
                  component="div"
                  loaded={true}
                  loadedClassName="loadedContent"
                  parentClassName="loader"
                />,
                "className": "loader",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": "div",
                  "loaded": true,
                  "loadedClassName": "loadedContent",
                  "parentClassName": "loader",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
